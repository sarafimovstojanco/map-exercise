[{"C:\\Users\\bokas\\dev\\map-exercise\\src\\index.js":"1","C:\\Users\\bokas\\dev\\map-exercise\\src\\App.js":"2"},{"size":447,"mtime":1608715572988,"results":"3","hashOfConfig":"4"},{"size":1295,"mtime":1608715572986,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"1xw1w52",{"filePath":"9","messages":"10","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"C:\\Users\\bokas\\dev\\map-exercise\\src\\index.js",[],["12","13"],"C:\\Users\\bokas\\dev\\map-exercise\\src\\App.js",["14"],"import React, { useState } from \"react\";\r\nimport axios from 'axios';\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  \r\n  const [books, setBooks] = useState('')\r\n  const apiURL = \"https://www.anapioficeandfire.com/api/books?pageSize=30\";\r\n  const fetchData= () => {\r\n    return axios.get(apiURL).then(response => setBooks(response.data))\r\n  }\r\n  \r\n books &&\r\n    books.map((book, index) => {\r\n      const cleanedDate = new Date(book.released).toDateString();\r\n      const authors = book.authors.join(', ');\r\n      const name = book.name\r\n      const country = book.country\r\n      const numberOfPages = book.numberOfPages\r\n      console.log(['authors'], authors)\r\n      console.log(['cleanedDate'], cleanedDate)\r\n      console.log(['name'], name)\r\n      console.log(['country'], country)\r\n      console.log(['numberOfPages'], numberOfPages)\r\n      \r\n    })\r\n//  const book = books.map((book, index) => {\r\n//      date = book.released\r\n//      authors = book.authors\r\n//      name = book.name\r\n//      country = book.country\r\n//      numberOfPages = book.numberOfPages\r\n//   })\r\n\r\n  return (\r\n    <div className=\"App\" >\r\n        <button className=\"fetch-button\" onClick={fetchData}>Fetch Data</button>\r\n        <div>\r\n          {books.cleanedDate}\r\n        </div>\r\n    </div>\r\n)}\r\nexport default App;\r\n",{"ruleId":"15","replacedBy":"16"},{"ruleId":"17","replacedBy":"18"},{"ruleId":"19","severity":1,"message":"20","line":14,"column":29,"nodeType":"21","messageId":"22","endLine":14,"endColumn":31},"no-native-reassign",["23"],"no-negated-in-lhs",["24"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]